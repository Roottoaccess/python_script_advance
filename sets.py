# This is the set practise in python scripting....
myset = {1,2,3,4,1,2} # In the set datastructure its stored the data not the duplicate data
# in set all the datas are unique and are well defined
print(myset) # Here is the printing statement....
x = set("Hello") # This also can be done....
print(x)

q = {}; print(type(q)) # This is the empty dictionary....
w = set(); print(type(w)) # This is the empty set....

# Adding the elements in the empty sets
w.add(1); w.add(2); w.add(3); w.add(4) ; print(f'This is the set after adding the elements: {w}')
# You can also remove the elements if you want
w.remove(3); print(f'After removing the element: {w}') # If remove function doesnot find the element it will through an error , but in the case of discard if the element is not there also it will not give a error which is a good practise after all....
w.discard(3); print(f'Using the discard function: {w}')
# w.clear() # This will clear the whole set....
# w.pop() # Return and remove the element from our set.....
for _ in x: # Iterating in the set we can do it....
    print(_)
if "h" in x: # Conditional statements also works in this case....
    print('yes boss !')
else:
    print('no boss !')
# Union and intersection in the set concepts....

odds = {1,3,5,7,9}
evens = {0,2,4,6,8}
primes = {2,3,5,7}
# Applying the union concept
u = odds.union(evens); print(f'This are all the union elements: {u}')
# Applying the intersection concepts
i = odds.intersection(primes); print(f'This are all the intersection: {i}')
# to calculate the difference from the two sets we will apply like....
setA = {1,2,3,4,5,6,7,8,9}
setB = {1,2,3,10,11,12}
print(setA.difference(setB)) # This will give the difference from the setA to setB
# There is a symmtric difference which will give the difference from both the sets....
print(setA.symmetric_difference(setB)) # This will give the difference from both the sets....
# There is update also for updating the sets, like set A will get all the uncommon elements from the setB as well
setA.update(setB)
print(setA)
subset = setA.issubset(setB); print(subset) # Checking is a subset or not....
# superset checking....
superset = setA.issuperset(setB); print(superset) # Checking is a superset or not....
# disjoint checking....
disjoint = setA.isdisjoint(setB); print(disjoint) # Checking is a disjoint or not.... (if not the same element it will return true otherwise it will return false)
# Shallow copy in python means that 